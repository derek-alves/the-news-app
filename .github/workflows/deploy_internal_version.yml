name: Deploy an internal version

on:
  workflow_dispatch:
    inputs:
      release_notes:
        description: 'Release note'
        type: string
        required: true
        default: 'Manual debug build'
      release_type:
        description: 'select environment <dev | stg>'
        required: true
        type: choice
        options:
          - dev
          - stg


jobs:

  deploy:
    name: deploy an internal version to app distribution
    runs-on: ${{ vars.RUNNER }}
    environment: ${{ vars.ENVIRONMENT_STAGE }}

    env:
      JAVA_VERSION: ${{ vars.JAVA_VERSION }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup Java JDK
        uses: actions/setup-java@v4.2.1
        with:
          distribution: 'temurin'
          java-version: '${{env.JAVA_VERSION}}'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: FIREBASE_APP_ID
        run: echo "JAVA-VERSION - ${{vars.FIREBASE_APP_ID}}"

      - name: CREDENTIAL_FILE_CONTENT
        run: echo "JAVA-VERSION - ${{vars.FIREBASE_APP_ID}}"

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Execute Gradle command - assembleDebug
        run: ./gradlew assembleDebug

      - name: Choose environment and set APK path
        run: |
          if [ "${{ github.event.inputs.release_type }}" == "dev" ]; then
            echo "APK_PATH=app/build/outputs/apk/dev/debug/app-dev-debug.apk" >> $GITHUB_ENV
          elif [ "${{ github.event.inputs.release_type }}" == "stg" ]; then
            echo "APK_PATH=app/build/outputs/apk/stg/debug/app-stg-debug.apk" >> $GITHUB_ENV
          fi
      - name: Upload artifact to Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{vars.FIREBASE_APP_ID}}
          serviceCredentialsFileContent: ${{vars.CREDENTIAL_FILE_CONTENT}}
          groups: testers
          file: "app/build/outputs/apk/stg/debug/app-dev-debug.apk"
          releaseNotes: ${{ inputs.release_notes }}